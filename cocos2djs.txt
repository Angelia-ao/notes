



cocos new -l js project_name
cc.LoaderScence.preload(g_resource,function(){
    cc.direct.runScene(new HelloWorldScene());
},this)

var HelloWorldScene = cc.Scene.extend({
    onEnter : function(){
        this._super();
        var layer = new HelloWorldLayer();
        this.addChild(layer);

    }
});

var layer = new cc.Layer();
var layerColor = new cc.LayerColor(cc.color(255,0,0),100,100);
var layerGradient = new cc.LayerGradient(cc.color(255,0,0),cc.color(255,0,0));
var sprite = new cc.Sprite(url);
cc.director.runScene(new cc.TransitionSlideInT(2,new SecondScene()));

pushScene
popScene
runScene
cc.director.getWinSize()
cc.director.getVisibleSize()
cc.director.getSchedule()
cc.director.pause() / resume()

new cc.MenuItemImage(
    res.CloseNormal_png,
    res.CloseSelected_png,
    this.closeClicked,this / this.closeClicked.bind(this)
);

this.bg = new cc.DrawNode();

this.scheduleUpdate();
update:function(){
    ...
}

this.bg.drawDot(new cc.Point(this.ball.x,this.ball.y),2,cc.color(255,0,0));

基本动作

moveTo / moveBy 移动到 移动量
var action = cc.moveTo(2,cc.p(size.width/2,size.height/2));
scaleTo / scaleBy 放缩到 放缩至 
var action2 =  cc.scaleTo(1,2,2);
fadeTo / fadeIn / fadeInOut 淡入淡出
var action4 =  cc.fadeIn(2);
blink  闪烁
var action = cc.blink(2,10); 
tintTo  色调变化
var action6 =  cc.tintTo(0.3,100,0,0);

delayTime 延迟
RotateTo / rotateBy 对接点旋转
SkewTo / SkewBy 对节点做倾斜变化
JumpTo / JumpBy 让节点跳跃移动
BezierTo / BezierBy 让节点沿着贝塞尔曲线移动

组合动作

cc.sequence() 顺序
repeat 重复
repeatForever 无限重复
spawn 同时执行
reverseTime / reverse 反向

reverse v3.1只支持xxxBy方法

var reverseTime = cc.reverseTime(action);
var reverse = action.reverse()
运动轨迹
reverse.easing(cc.easeIn(2));
easeIn easeOut easeInOut
easeCubicActionIn/Out/Iuout
easeBackIn/Out/InOut
easeElasticIn/Out/InOut

node.stopAction(action);
node.stopActionByTag(actionTag);
node.stopAllAction();

node.pause();
node.resume();

监听动作的开始与结束
var callback = cc.callFunc(this.callback,this,"message");

callback : function(nodeExectingAction.data){
    ...
}

cc.sequence(action,callback,action1);

声音
cc.audioEngine.playMusic("res/sounds/bg.mp3",true);//是否重复
cc.audioEngine.stopMusic();
var effect = c.audioEngine.playEffect("res/sounds/eat.mp3",false);
cc.audioEngine.stopEffect(effect);
cc.audioEngine.stopAllEffects();

cc.audioEngine.setEffectVolume(0 ~ 1);
cc.audioENgine.setMusicVolume(0 ~ 1);

事件

if('mouse' in cc.sys.capabilities){
    cc.eventManager.addListener({
        event:cc.EventListener.MOUSE,
        onMouseDown:function(event){
            var pos = event.getLocation();
            var target = event.getCurrentTarget();
        },
        onMouseUp:function(event){
        },
        onMouseMove:function(event){
        }
    },this);
}


cc.EventListener.TOUCH_ONE_BY_ONE,

onTouchBegan
onTouchMoved:function(touch,event){
    var pos = touch.getLocation();
    var id = touch.getID();
    var target = touch.getCurrentTarget();
}
onTouchEnded:function(touch,event){
onTouchCanceled:function(touch,event){

cc.EventListener.TOUCH_ALL_AT_ONCE,
    event:cc.EventListener.KEYBOARD,
cc.eventManager.addListener({
    event:cc.EventListener.KEYBOARD,
    onKeyReleased:function(keyCode,event){
        if(keyCode == cc.KEY.back){
            trace("key Code " + keyCode);
            cc.director.end();
        }else if(keyCode == cc.KEY.z){
            trace("key Code " + keyCode);
        }
    },
    onKeyPressed:function(keyCode,event){

    }
},this);

event:cc.EventListener.ACCELERATION,
callback

休息进入后台
cc.eventManager.addCustomListener(cc.game.EVENT_HIDE,function(){
    trace('Game Hide');
});
cc.eventManager.addCustomListener(cc.game.EVENT_SHOW,function(){
    trace('Game Show');

});


定时器

node.scheduleOnce(callback,delay_seconds);

node.schedule(callback,interval,repeat,delay);

repeat + 1

cc.REPEAT_FOREVER

node.scheduleUpdate / node.unscheduleUpdate
node.schedule node.scheduleOnce / node.unschedule


schedule2 :function(callback,interval){
    var then = Date.now();
    interval *= 1000;
    this.schedule(function(){
        var now = Date.now();
        var delta = now - then ;
        if(delta > interval){
            then = now - (delta % interval);
            callback.call(this);
        }
    }.bind(this),0);
}

按钮
MenuItemSprite

        var spriteNormal= new cc.Sprite(res.startgame_png);
        var spriteSelected = new cc.Sprite(res.startgame2_png);
        var spriteDisabled = new cc.Sprite(res.startgame3_png);

        var menuSprite = new cc.MenuItemSprite(spriteNormal,spriteSelected,spriteDisabled,this.startgame,this);
        var menu = new cc.Menu(menuSprite);
        this.addChild(menu);
        item.setEnabled(true);


MenuItemImage 
MenuItemFont    new cc.MenuItemFont(text,clickHandler,target);
MenuItemLabel   new cc.MenuItemLabel(label,clickHandler,target);

        var label = new cc.LabelTTF("START GAME","Arial",32);
        var item = new cc.MenuItemLabel(label,this.startgame,this);

MenuItemToggle(menu,menu1,this.callback,target)

菜单排列

menu.alignItemsVertically(); 纵向排列
menu.alignItemsHorizontally(); 横向排列
menu.alignItemsHorizontallyWithPadding(20)

new cc.LabelTTF(text,font,fontSize,hAlign,wALign);
        
        var aboutText = new cc.LabelTTF('About this game \n...','Arial',20,cc.size(350,200),cc.TEXT_ALIGNMENT_LEFT,cc.VERTICALTEXT_ALIGNMENT_TOP);
        aboutText.x = size.width / 2;
        aboutText.y = size.height / 2;
        this.addChild(aboutText);


localStorage

cc.sys.localStorage.getItem(key); / setItem(key,value)

打包指令

cocos compile -p web/ad/ios -m release/debug -adveanced

TexturePacker

cc.spriteFrameCache.addSpriteFrames("res/candy.plist");

new cc.Sprite("#1.png");

note : load resource in resource.js

分批处理

new cc.SpriteBatchNode(url);

batch.addChild
缓存池
cc.pool.hasObject(ReuseSprite)
cc.pool.putInPool(ball);
cc.pool.getFromPool(ReuseSprite,param);
位图缓存
BakeLayer

layer.bake();

At 2016-02-26 15:38:22 整理cocos


动态背景

视差滚动背景

ParallaxNode
var parallax = new cc.parallaxNode();
parallax.addChild(bgLayer,z-index,ratio,offset);
 bg.addChild(bg4,4,cc.p(1,0),cc.p(bg4.width/2,bg4.height/2));











http://onebyonedesign.com/flash/particleeditor/









